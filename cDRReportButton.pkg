Use Windows.pkg
Use ReportStructs.pkg
Use cDRReportFionaidh.pkg

// Might need to go to Printers Library 
Enum_List 
    Define C_NO_PRINTER
    Define C_PRINTER_FRONT
    Define C_PRINTER_BACK 
    Define C_PRINTER_LABEL 
    Define C_PRINTER_LABEL_SMALL
    Define C_PRINTER_LABEL_BACK 
End_Enum_List

// End Printers. 
Class cDRReportButton is a Button
    
    Procedure Construct_Object
        Forward Send Construct_Object
        {Visibility=Private}
        Property String psBtnReportName_Private "" 
        {Visibility=Private}
        Property Handle phoBtnReport 0
        Property String psKeyFileField ""
        {Visibility=Private}
        Property String psKeyValue ""
        {Visibility=Private}
        Property tParams ptReportParams 
        
        String hoBtnReport  
        Get Create (RefClass(cDRReportFionaidh)) to hoBtnReport
        Set phoBtnReport to hoBtnReport
        Set Label to "Print"    
    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object
    End_Procedure
    
    Procedure Set psBtnReportName String sReportName
        Set psBtnReportName_Private to sReportName 
        Set psReportName of (phoBtnReport(Self)) to sReportName 
    End_Procedure
    
    Procedure AddParameter String sParamName String  sParamValue
        tParams ThisReportConfig
        tReportParameters[] rptParams 
        Boolean bAdd
        Integer iStep iParam
        Move True to bAdd // if it's a new parameter add it by default.
        Get ptReportParams to ThisReportConfig
        Move ThisReportConfig.aParameters to rptParams
        For istep from 0 to (SizeofArray(rptParams) -1) 
            If (trim(lowercase(rptParams[iStep].sName)) = (trim(Lowercase(sParamName)))) Begin 
                Move sParamValue to  rptParams[iStep].sValue
                Move False to bAdd      
            End    
        Loop
        If (bAdd) Begin 
            Move (SizeOfArray(rptParams)) to iStep 
            Move sParamValue to  rptParams[iStep].sValue
            Move sParamName  to  rptParams[iStep].sName
        End
        Move rptParams to ThisReportConfig.aParameters
        Set ptReportParams to ThisReportConfig 
    End_Procedure
    
    Procedure UpdateParameters Handle hoReportID String sReportID
        tParams ThisReportConfig
        tReportParameters[] rptParams 
        Integer iStep iParameter
        
        Get ptReportParams to ThisReportConfig
        Move ThisReportConfig.aParameters to rptParams
        For istep from 0 to (SizeofArray(rptParams) -1) 
            Get ParameterIdByName of horeportID sreportID rptParams[iStep].sName to iParameter 
            If (iParameter <>-1) Begin 
                 Set psParameterValue of horeportID sReportId iParameter to  rptParams[iStep].sValue  
            End
        Loop
    End_Procedure
   
    { EnumList = "C_NO_PRINTER , C_PRINTER_FRONT, C_PRINTER_BACK,C_PRINTER_LABEL, C_PRINTER_LABEL_SMALL, C_PRINTER_LABEL_BACK"}
    Procedure Set psPrinter Integer iPrinterEnum 
        String sPrinter
        Integer iPrinterSelector 
        // 1 Get piPRINTER_SELECTED to iPrinterSelector
        Move iPrinterEnum to iPrinterSelector
        Case Begin 
            Case (iPrinterSelector = C_NO_PRINTER)
                Move "" to sPrinter       
                Case Break                                                     
//            Case (iPrinterSelector = C_PRINTER_FRONT)                       
//                Get psReportPrinterName of ghoApplication to sPrinter         
//                Case Break                                                    
//            Case (iPrinterSelector = C_PRINTER_BACK)
//                Get psBackRoomReportsPN of ghoApplication to sPrinter
//                Case Break
//            Case (iPrinterSelector = C_PRINTER_LABEL)
//                Get psLabelPrinterName of ghoApplication to sPrinter
//                Case Break
//            Case (iPrinterSelector = C_PRINTER_LABEL_SMALL)
//                Get psLabelSmallPrinterName of ghoApplication to sPrinter
//                Case Break
//            Case (iPrinterSelector = C_PRINTER_LABEL_BACK)
//                Get psBackRoomLabelsPN of ghoApplication to sPrinter
//                Case Break
        Case End
       Send UserError 
       Set psPrinterName of (phoBtnReport(Self))  to sPrinter 
    End_Function

    Procedure DumpReport Integer piCount 
        Integer iCount iFilters
        String sReportID 
        Move 1 to iCount 
        Handle hoReport
        Boolean bFilters
        String strTest strTest2 strTest3   
        Get phoBtnReport to hoReport 
        
        If (num_arguments > 0) Move piCount to iCount
        // Open the report 
        Get OpenReport of hoReport to sReportID 
        Set psReportId of hoReport to sReportID  
        Send RemoveAllFilters of hoReport (psReportId(phoBtnReport(Self))) 
        Send UpdateParameters hoReport sReportID
        Send AddFilter of hoReport sReportID (SFormat("{%1}",(psKeyFileField(Self))))  C_drEqual  (psKeyValue(Self))  
        Set peOutputDestination of hoReport to PRINT_TO_PRINTER
        Get FiltersDefined of hoReport sReportID  to bFilters 
        If (bFilters) Begin
//            Get FilterCount of hoReport sReportID  to iFilters 
//            While (iFilters > 0)
//                Get psFilterField      of hoReport  sReportID iFilters to strTest
//                Get peFilterOperator   of hoReport  sReportID iFilters to strTest2
//                Get psFilterValue      of hoReport  sReportID iFilters to strTest3
//                  
//                Decrement iFilters
//            Loop
            
            
            
            
            
             
            Send OutputReport of hoReport
        End
        Decrement iCount 
        While (iCount > 0)
            Decrement iCount 
            Send OutputReport of (phoBtnReport(Self))
        Loop
    End_Procedure
    
    
    Procedure SetSortFields 
    End_Procedure

End_Class

  